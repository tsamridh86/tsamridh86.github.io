{"version":3,"sources":["components/HeaderSection/HeaderInfoSection.tsx","components/HeaderSection/HeaderSectionContainer.tsx","components/SelectionSection/SelectionSectionContainer.tsx","components/MainSection/MainBodyContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["nameStyle","fontSize","fontFamily","fontWeight","designationStyle","bDayStyle","HeaderInfoSection","style","photoStyle","width","borderRadius","HeaderSectionContainer","Grid","container","direction","spacing","item","xs","sm","md","lg","src","alt","SelectionSectionContainer","AppBar","position","color","Container","maxWidth","Button","MainBodyContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAMA,EAAY,CACjBC,SAAU,MACVC,WAAY,SACZC,WAAY,QAGPC,EAAmB,CACxBH,SAAU,MACVC,WAAY,SACZC,WAAY,WAGPE,EAAY,CACjBJ,SAAU,QACVC,WAAY,SACZC,WAAY,WAYEG,EAVW,WACzB,OAAO,qCACN,qBAAKC,MAAOP,EAAZ,8BACA,qBAAKO,MAAOH,EAAZ,yDACA,qBAAKG,MAAOF,EAAZ,2BACA,uBACA,4ICpBIG,EAAa,CACjBC,MAAO,OACPC,aAAc,OAgBDC,EAbgB,WAC7B,OACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAS,EAAzC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,qBAAKC,IAAI,mDAAmDd,MAAOC,EAAYc,IAAI,4BAErF,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAArC,SACE,cAAC,EAAD,U,wBCFOG,EAXmB,WAChC,OAAO,cAACC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,cAAhC,SACL,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,yBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,6BACA,cAACA,EAAA,EAAD,4BCJSC,EAJW,WACtB,OAAO,6DCcIC,EAVH,WACV,OACE,qCACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCIWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.75e9a10c.chunk.js","sourcesContent":["const nameStyle = {\n\tfontSize: \"3em\",\n\tfontFamily: \"Roboto\",\n\tfontWeight: \"bold\",\n}\n\nconst designationStyle = {\n\tfontSize: \"1em\",\n\tfontFamily: \"Roboto\",\n\tfontWeight: \"boldest\",\n}\n\nconst bDayStyle = {\n\tfontSize: \"0.8em\",\n\tfontFamily: \"Roboto\",\n\tfontWeight: \"boldest\",\n}\nconst HeaderInfoSection = () => {\n\treturn <>\n\t\t<div style={nameStyle}>Samridh Tuladhar</div>\n\t\t<div style={designationStyle}>Computer Engineer, Full Stack Web Developer</div>\n\t\t<div style={bDayStyle}>12th Nov 1996</div>\n\t\t<br />\n\t\t<div>A computer engineer with a passion for environmentally friendly automation and disdain for paperwork.</div>\n\t</>\n}\n\nexport default HeaderInfoSection","import { Grid } from \"@mui/material\"\nimport HeaderInfoSection from \"./HeaderInfoSection\"\n\nconst photoStyle = {\n  width: \"100%\",\n  borderRadius: \"50%\",\n}\n\nconst HeaderSectionContainer = () => {\n  return (\n    <Grid container direction=\"row\" spacing={3}>\n      <Grid item xs={12} sm={6} md={3} lg={3}>\n        <img src=\"https://avatars.githubusercontent.com/u/15893434\" style={photoStyle} alt=\"Samridh's profile pic\" />\n      </Grid>\n      <Grid item xs={12} sm={6} md={6} lg={6}>\n        <HeaderInfoSection />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default HeaderSectionContainer","import { AppBar, Button, Container } from \"@mui/material\"\n\nconst SelectionSectionContainer = () => {\n  return <AppBar position=\"static\" color=\"transparent\">\n    <Container maxWidth=\"xl\">\n      <Button>Experience</Button>\n      <Button>Education</Button>\n      <Button>Other projects</Button>\n      <Button>Contact</Button>\n    </Container>\n  </AppBar>\n}\n\nexport default SelectionSectionContainer","const MainBodyContainer = () => {\n    return <>Hi I'm the main body</>\n}\n\nexport default MainBodyContainer","import React from 'react'\nimport HeaderSectionContainer  from './components/HeaderSection/HeaderSectionContainer';\nimport SelectionSectionContainer  from './components/SelectionSection/SelectionSectionContainer';\nimport MainBodyContainer from './components/MainSection/MainBodyContainer';\n\nconst App = () =>  {\n  return (\n    <>\n    <HeaderSectionContainer />\n    <SelectionSectionContainer />\n    <MainBodyContainer />\n    </> \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}